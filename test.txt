;;; Simple trees
; t
; tt
; ttt

;;; Reduction rules
; tttt                      ; t
; t(tt)tt                   ; tt(tt)
; t(ttt)tt                  ; t
; t(ttt)t(tt)               ; tt
; t(ttt)t(ttt)              ; ttt

;;; Redexes on lower levels
; t (tt (tttt)) tt          ; t
; t (tt (tttt)) t           ; t (ttt) t

;;; All reduction rules in lower levels
; t(tttt)                   ; tt
; t(t(tt)tt)                ; t(tt(tt))
; t(t(ttt)tt)               ; tt
; t(t(ttt)t(tt))            ; t(tt)
; t(t(ttt)t(ttt))           ; t(ttt)
; t(tttt)(t(ttt)tt)(t(tt)tt); t
; t(t(tttt)(tttt)(tttt))(t(tttt)(tttt)(tttt))(t(tttt)(tttt)(tttt))
                            ; t
; t (tttt) (t(tt)tt) (t(ttt)tt) (t(ttt)t(tt)) (t(ttt)t(ttt))
                            ; tt(ttt)
; t (t (tttt) (t(tt)tt) (t(ttt)tt) (t(ttt)t(tt)) (t(ttt)t(ttt)))
                            ; t(tt(ttt))

;;; All rules chained after each other (3, 2, 2, 5, 2, 4, 1)
; t(t(ttt)tt)(t(tt)t(t(t(ttt)))tt)t
                            ; tt

;;; All rules, smaller version (2, 2, 2, 2, 5, 4, 2, 1, 3)
; t (t (t (t (t (t t) t)))) t (t (t t t)) t
                            ; tt

;;; All rules chained after each other exactly once (2, 5, 4, 3, 1)
; tt(t(t(t(ttt)))(tt)(t(ttt))tt)t
                            ; t

;;; Never terminates
; t(t(t(tt)t))t(t(t(tt)t))

;;; Random trees, i don't feel like deciphering them, they are leftovers from
;;; earlier tests
; t (tttt) (tttt) (tttt)    ; t
; tt (ttt (tt)) t (ttt)     ; t (ttt)
; t(tttt)t                  ; ttt
; tt(tttt)                  ; ttt
; t (tt (tttt)) t (tttt)    ; t

;;; And True False
; (t (t (t t t) (t t (t (t (t t)) t))) t) (t t) t
                            ; t

;;; And True True
; (t (t (t t t) (t t (t (t (t t)) t))) t) (t t) (t t)
                            ; tt

;;; Not (And True False)
; (t (t (t t) (t t t)) t) ((t (t (t t t) (t t (t (t (t t)) t))) t) (t t) t)
                            ; tt

;;; Equal t t
; (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t))) (t t (t (t (t t (t (t (t (t (t t (t (t (t t t)) (t (t (t (t t) (t t t)) (t t (t t t))))))) (t (t (t (t (t t (t (t (t (t (t t (t (t (t t t)) t))) (t (t (t t (t t))) (t (t (t t t)) t)))) (t t (t t))))) (t (t (t t (t (t (t t t)) (t t))))))) (t t (t t (t t t)))))) (t (t (t t (t (t (t t (t (t (t t (t (t t (t t t))))))))))) (t (t (t (t (t t (t (t (t (t (t t (t (t (t t t)) t))) (t (t (t t (t t))) (t (t (t t t)) t)))) (t t (t t))))) (t (t (t t (t (t (t t (t (t (t t (t (t (t t t)) t))) (t t))))))) (t (t (t t (t (t (t t (t (t (t (t (t t (t (t (t t t)) t))) (t (t (t t (t t))) (t (t (t t t)) t)))) (t t (t t)))))))) (t (t (t t (t (t (t t (t (t (t t (t (t (t t (t (t (t t t)) t))) (t t)))))))))) (t (t (t t (t (t (t t (t (t (t t t) (t t (t (t (t t)) t))) t)))))))))))) (t (t (t t)) t)))))) (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t)))))) (t t))))) t t
                            ; tt

;;; Fibonacci bench
; (t (t (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t))) (t t (t (t (t t (t (t (t (t (t t (t (t (t t t)) t))) (t (t (t t (t (t (t t (t (t (t (t (t (t (t t (t (t (t t t))))) t)) (t t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t))) (t t (t (t (t t (t (t (t t (t (t (t (t t) t) t)))) (t (t (t (t (t t (t (t (t (t (t t (t (t (t (t (t t (t (t (t t t)) t))) (t (t (t t (t t))) (t (t (t t t)) t)))) (t t (t t))))) (t (t (t t (t (t (t t (t (t (t (t (t t (t (t (t t t))))) t))))) (t t)))) (t t)))) (t t t)))) (t (t (t t (t t)))))) (t t (t (t t))))))) (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t)))))) (t t))))))))) (t t t))))))) (t (t (t t (t (t (t t (t (t (t (t (t t (t (t (t t (t (t (t t t)) t))) (t t)))) (t (t (t t (t (t (t t (t (t (t (t (t t)) t))))) (t t)))) (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t))) (t t (t (t (t t (t (t (t t (t (t t t)))) (t (t (t t (t (t (t (t (t (t (t t (t (t (t t t))))) t)) (t t (t t (t (t t t) (t (t (t t (t (t (t t (t t)))))) t)))))) (t t t)))) (t (t (t t (t (t t))))))))) (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t)))))) (t t))))))))))) (t t)))) (t (t (t (t (t t (t (t (t t (t (t (t t t)) t))) (t t)))) (t (t (t t t)) t))) (t (t (t t (t (t (t (t (t t (t (t (t t t)) t))) (t (t (t t (t t))) (t (t (t t t)) t)))) (t t (t t))))) (t (t (t (t (t t (t (t (t t t)) t))) (t t))) (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t))) (t t (t (t (t t (t (t (t t (t (t t t)))) (t (t (t t (t (t (t (t (t (t (t t (t (t (t t t))))) t)) (t t (t t (t (t t t) (t (t (t t (t (t (t t (t t)))))) t)))))) (t t t)))) (t (t (t t (t (t t))))))))) (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t)))))) (t t))))))))))))) (t t (t (t (t t) (t t t)) (t t (t t t))))))) (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t)))))) (t t))))))) (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t))) (t t (t (t (t t (t (t (t t (t (t t t)))) (t (t (t t (t (t (t (t (t (t (t t (t (t (t t t))))) t)) (t t (t t (t (t t t) (t (t (t t (t (t (t t (t t)))))) t)))))) (t t t)))) (t (t (t t (t (t t))))))))) (t (t (t t (t (t (t (t (t t (t (t (t (t (t (t (t t)) t)) (t (t (t t)) t)))))) (t t)))))) (t t))))))) (t t t))
; (△ △ (△ △ (△ (△ △) (△ (△ △) △)))) ; 12
; (△ △ (△ (△ △) (△ △ (△ (△ △) △)))) ; 10
; (t t (t t (t (t t) (t t (t (t t) t))))) ; 20
; (t t (t t (t t (t (t t) t)))) ; 8

;;; double 2
; (△ (△ (△ (△ (△ △ (△ (△ △ △)))) (△ (△ (△ △ (△ △))) (△ (△ (△ △ (△ △))) (△ △))))) (△ (△ (△ △)) △)) (△ △ (△ (△ △) △))
                            ; tt(tt(t(tt)t))